#BlueJ class context
comment0.target=Leinwand
comment0.text=\r\n\ Leinwand\ ist\ eine\ Klasse,\ die\ einfache\ Zeichenoperationen\ auf\ einer\r\n\ leinwandartigen\ Zeichenflche\ ermglicht.\r\n\ Sie\ ist\ eine\ vereinfachte\ Version\ der\ Klasse\ Canvas\ (englisch\ f\uFFFDr\ \r\n\ Leinwand)\ des\ JDK\ und\ wurde\ speziell\ fr\ das\ Projekt\ "Figuren"\r\n\ geschrieben.\r\n\ \r\n\r\n\ @author\:\ Bruce\ Quig\r\n\ @author\:\ Michael\ K\uFFFDlling\ (mik)\r\n\ @author\:\ Axel\ Schmolitzky\r\n\r\n\ @version\:\ 1.6\r\n
comment1.params=
comment1.target=Leinwand\ gibLeinwand()
comment1.text=\r\n\ Fabrikmethode,\ die\ eine\ Referenz\ auf\ das\ einzige\ Exemplar\r\n\ dieser\ Klasse\ zur\uFFFDckliefert.\ Wenn\ es\ von\ einer\ Klasse\ nur\r\n\ genau\ ein\ Exemplar\ gibt,\ wird\ dieses\ als\ 'Singleton'\r\n\ bezeichnet.\r\n
comment10.params=millisekunden
comment10.target=void\ warte(int)
comment10.text=\r\n\ Warte\ f\uFFFDr\ die\ angegebenen\ Millisekunden.\r\n\ Mit\ dieser\ Operation\ wird\ eine\ Verz\uFFFDgerung\ definiert,\ die\r\n\ f\uFFFDr\ animierte\ Zeichnungen\ benutzt\ werden\ kann.\r\n\ @param\ \ millisekunden\ die\ zu\ wartenden\ Millisekunden\r\n
comment11.params=
comment11.target=void\ erneutZeichnen()
comment11.text=\r\n\ Zeichne\ erneut\ alle\ Figuren\ auf\ der\ Leinwand.\r\n
comment12.params=
comment12.target=void\ loeschen()
comment12.text=\r\n\ L\uFFFDsche\ die\ gesamte\ Leinwand.\r\n
comment2.params=titel\ initBreite\ initHoehe\ grundfarbe
comment2.target=Leinwand(java.lang.String,\ int,\ int,\ java.awt.Color)
comment2.text=\r\n\ Erzeuge\ eine\ Leinwand.\r\n\ @param\ titel\ \ Titel,\ der\ im\ Rahmen\ der\ Leinwand\ angezeigt\ wird\r\n\ @param\ grundfarbe\ die\ Hintergrundfarbe\ der\ Leinwand\r\n
comment3.params=e
comment3.target=void\ componentResized(java.awt.event.ComponentEvent)
comment4.params=sichtbar
comment4.target=void\ setzeSichtbarkeit(boolean)
comment4.text=\r\n\ Setze,\ ob\ diese\ Leinwand\ sichtbar\ sein\ soll\ oder\ nicht.\ Wenn\ die\r\n\ Leinwand\ sichtbar\ gemacht\ wird,\ wird\ ihr\ Fenster\ in\ den\r\n\ Vordergrund\ geholt.\ Diese\ Operation\ kann\ auch\ benutzt\ werden,\ um\ \r\n\ ein\ bereits\ sichtbares\ Leinwandfenster\ in\ den\ Vordergrund\ (vor\r\n\ andere\ Fenster)\ zu\ holen.\r\n\ @param\ sichtbar\ boolean\ f\uFFFDr\ die\ gew\uFFFDnschte\ Sichtbarkeit\:\ \r\n\ true\ f\uFFFDr\ sichtbar,\ false\ f\uFFFDr\ nicht\ sichtbar.\r\n
comment5.params=figur\ farbe\ shape
comment5.target=void\ zeichne(java.lang.Object,\ java.lang.String,\ java.awt.Shape)
comment5.text=\r\n\ Zeichne\ f\uFFFDr\ das\ gegebene\ Figur-Objekt\ eine\ Java-Figur\ (einen\ Shape)\r\n\ auf\ die\ Leinwand.\r\n\ @param\ \ figur\ \ das\ Figur-Objekt,\ f\uFFFDr\ das\ ein\ Shape\ gezeichnet\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ werden\ soll\r\n\ @param\ \ farbe\ \ die\ Farbe\ der\ Figur\r\n\ @param\ \ shape\ \ ein\ Objekt\ der\ Klasse\ Shape,\ das\ tats\uFFFDchlich\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ gezeichnet\ wird\r\n
comment6.params=
comment6.target=java.util.List\ gibFiguren()
comment7.params=e
comment7.target=java.lang.Object\ gibFigur(java.lang.Object)
comment8.params=figur
comment8.target=void\ entferne(java.lang.Object)
comment8.text=\r\n\ Entferne\ die\ gegebene\ Figur\ von\ der\ Leinwand.\r\n\ @param\ \ figur\ \ die\ Figur,\ deren\ Shape\ entfernt\ werden\ soll\r\n
comment9.params=farbname
comment9.target=void\ setzeZeichenfarbe(java.lang.String)
comment9.text=\r\n\ Setze\ die\ Zeichenfarbe\ der\ Leinwand.\r\n\ @param\ \ farbname\ der\ Name\ der\ neuen\ Zeichenfarbe.\r\n
numComments=13
